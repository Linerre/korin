* Example solutions from Endlesscheng (灵茶山艾府)

** Leetcode 11: container with most water
:PROPERTIES:
:URL:      https://leetcode.cn/problems/container-with-most-water/solutions/1974355/by-endlesscheng-f0xz/
:END:
#+BEGIN_SRC python
class Solution:
    def maxArea(self, height: List[int]) -> int:
        ans = left = 0
        right = len(height) - 1
        while left < right:
            area = (right - left) * min(height[left], height[right])
            ans = max(ans, area)
            if height[left] < height[right]:
                left += 1
            else:
                right -= 1
        return ans
#+END_SRC python

** Leetcode 42: trapping rain water
:PROPERTIES:
:URL:      [[https://leetcode.cn/problems/trapping-rain-water/solutions/1974340/zuo-liao-nbian-huan-bu-hui-yi-ge-shi-pin-ukwm/]]
:END:
*** Solution 1
#+BEGIN_SRC python
class Solution:
    def trap(self, height: List[int]) -> int:
        n = len(height)
        pre_max = [0] * n  # pre_max[i] 表示从 height[0] 到 height[i] 的最大值
        pre_max[0] = height[0]
        for i in range(1, n):
            pre_max[i] = max(pre_max[i - 1], height[i])
        suf_max = [0] * n  # suf_max[i] 表示从 height[i] 到 height[n-1] 的最大值
        suf_max[-1] = height[-1]
        for i in range(n - 2, -1, -1):
            suf_max[i] = max(suf_max[i + 1], height[i])
        ans = 0
        for h, pre, suf in zip(height, pre_max, suf_max):
            ans += min(pre, suf) - h  # 累加每个水桶能接多少水
        return ans
#+END_SRC
*** Solution 2
#+BEGIN_SRC python
class Solution:
    def trap(self, height: List[int]) -> int:
        ans = left = pre_max = suf_max = 0
        right = len(height) - 1
        while left < right:
            pre_max = max(pre_max, height[left])
            suf_max = max(suf_max, height[right])
            if pre_max < suf_max:
                ans += pre_max - height[left]
                left += 1
            else:
                ans += suf_max - height[right]
                right -= 1
        return ans
#+END_SRC
** Leetcode 167: sum of two numbers
:PROPERTIES:
:URL:      https://leetcode.cn/problems/two-sum-ii-input-array-is-sorted/solutions/1968341/san-shu-zhi-he-bu-hui-xie-xiang-xiang-sh-6wbq/
:END:
#+BEGIN_SRC python
class Solution:

    def twoSum(self, numbers: List[int], target: int) -> List[int]:

        left = 0

        right = len(numbers) - 1

        while True:

            s = numbers[left] + numbers[right]

            if s == target:

                return [left + 1, right + 1]  # 题目要求下标从 1 开始

            if s > target:

                right -= 1

            else:

                left += 1

#+END_SRC
